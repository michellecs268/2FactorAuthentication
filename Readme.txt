##Example running in MacOS:

# create and use virtual environment
python en venv
source venv/bin/activate

# to run device.py
python3 device.py Alice Alice7894508

# to run connect.py
python3 connect.py Alice new                /  python connect.py Alice new
python3 connect.py Alice Alice7894508 PIN   /  python connect.py Alice Alice7894508 PIN


##Explanation of the Relationship:

Credential Storage (Passwords.txt):
- This file is used to store user credentials in a simple format where each
  line contains a username and its corresponding password. The
  structure allows for easy retrieval and verification during the
  authentication process.

User Registration and Validation (connect.py):
- Manages user registration and validation. Reads username and
  password and checks these against the stored credentials
  in Passwords.txt. If the user wants to register, it writes (stores) the new
  username and password into Passwords.txt.
- If user attempts to log in, connect.py verifies the credentials with those
  stored in the Passwords.txt file. This establishes user authentication by
  ensuring only registered users with correct credentials can proceed.
- Utilization of the OTP generated by device.py as a PIN for user login.

OTP Generator (device.py):
- It can generate a one-time password (OTP) using the device.py file.
  The OTP is calculated based on the username, password, and the
  current time.

Why the PIN Values Don’t Leak Password Information:
- One-Way Hashing: The OTP (One-Time Password) is created using a hashing
  method that transforms the username, password, and current time into a unique
  code. This process is one-way, which means it’s nearly impossible to figure out
  the original username or password just by looking at the OTP.
- Time-Sensitive: The OTP changes every 15 seconds based on the current time.
  So, even if someone manages to get an OTP, it only works for a short time,
  making it less useful for attackers.
- Extra Security with PIN: The PIN is separate from the password, adding another
  layer of security. Even if someone knows your password, they still need the
  correct PIN to access your account. This makes it harder for anyone to get in
  without full credentials.
- Hard to Guess: Because the OTP is generated based on the current time and
  requires both the username and password, it’s really difficult for someone to
  guess it. An attacker would need to know your username, password, and the
  exact time to generate a valid OTP.
